name: tests
on: [push, pull_request]

jobs:
  clippy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Install Rust (stable)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy
        override: true

    - name: Clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy

  format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Install Rust (stable)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt
        override: true

    - name: Check Format
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check


  test:
    continue-on-error: true
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            test: true
          - target: thumbv6m-none-eabi
            args: --no-default-features
          - target: thumbv7em-none-eabihf 
            args: --no-default-features

    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v1.2.1
      
    - name: Configure toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target:  ${{ matrix.target }}
        override: true
    
    - name: Configure caching 
      uses: actions/cache@v2
      with:
        key: ${{ matrix.target }}
        path: |
          ${{ env.HOME }}/.cargo
          target

    - name: Build release
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: build
        args: --target ${{ matrix.target }} --release ${{ matrix.args }}

    - name: Run tests (std / native only)
      if: ${{ matrix.test == true }}
      uses: actions-rs/cargo@v1
      with:
        use-cross: ${{ matrix.use_cross }}
        command: test
        args: --target ${{ matrix.target }} ${{ matrix.args }}
